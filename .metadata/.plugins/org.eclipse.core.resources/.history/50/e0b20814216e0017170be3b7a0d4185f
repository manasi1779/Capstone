package com.project;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import org.neo4j.graphdb.GraphDatabaseService;
import org.neo4j.graphdb.Label;
import org.neo4j.graphdb.Node;
import org.neo4j.graphdb.RelationshipType;
import org.neo4j.graphdb.ResourceIterable;
import org.neo4j.graphdb.Transaction;
import org.neo4j.graphdb.factory.GraphDatabaseFactory;
import org.neo4j.graphdb.factory.GraphDatabaseSettings;
import org.neo4j.io.fs.FileUtils;
import org.neo4j.unsafe.batchinsert.BatchInserter;
import org.neo4j.unsafe.batchinsert.BatchInserters;

public class LodingProteinsCreateNodeEachDB {
	
	private static void processGraph(File file,BatchInserter inserter) {
		try{
		Map<String, Long> graphID = new HashMap<String, Long>();
		BufferedReader br = new BufferedReader(new FileReader(file));
		String dbName= file.getName();
		String line = null;
		Map<String, Object> datasetNode = new HashMap<String, Object>();
		String str="EXTRA";
		//System.out.println(dbName);
		datasetNode.put("DatasetName",dbName);
		datasetNode.put("originalId",str);
		Label dataSetLabel=Label.label(dbName);
		Long dataId=inserter.createNode(datasetNode, dataSetLabel);
		while ((line = br.readLine()) != null) {
			String[] nodes=line.split(" ");
			if(nodes.length>1){
				if(Character.isLetter(nodes[1].charAt(0))){
					Label label = Label.label(nodes[1]);
					Map<String, Object> node = new HashMap<String, Object>();
					node.put("originalId", nodes[0]);
					Long id = inserter.createNode(node, label);
					graphID.put(nodes[0], id);
					inserter.createRelationship(dataId, graphID.get(nodes[0]), RelationshipType.withName("databaseEdge"), null);
				}
				else{
					Long nodeID1 = graphID.get(nodes[0]);
					Long nodeID2 = graphID.get(nodes[1]);
					inserter.createRelationship(nodeID1, nodeID2, RelationshipType.withName("edgeBetween"), null);
				}
			}
		}
		
		}catch(Exception e){
			System.out.println(e.getMessage());
		}
		
		

	}

	public static void main(String[] args) {
		String dbFileName = "C:/Users/pragatiunde1990/Documents/Neo4j/MultiProteinNodeForEachDB";
		String path = "F:/SEM IV/Graph Databases/Assignment 4/Proteins/Proteins/part3_Proteins/Proteins/Target";
		File dbNewFile = new File(dbFileName);
	
		try {
			FileUtils.deleteRecursively(dbNewFile);
			BatchInserter inserter = BatchInserters.inserter(dbNewFile);
			File folder = new File(path);
			int dataSetNumber = 1;
			File[] listofFiles = folder.listFiles();
			for (File file : listofFiles) {
				if (dataSetNumber < 301){
				//if(file.getName().equals("backbones_1FYK.grf")){
					processGraph(file,inserter);
					System.out.println("dataset "+ dataSetNumber+" is loaded");
				}
				dataSetNumber++;
			}
			inserter.shutdown();
			System.out.println("Done");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
